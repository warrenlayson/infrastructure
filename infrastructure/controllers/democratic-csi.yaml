---
apiVersion: v1
kind: Namespace
metadata:
  name: democratic-csi
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: democratic-csi
  namespace: democratic-csi
spec:
  interval: 24h0m0s
  url: https://democratic-csi.github.io/charts/
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: zfs-iscsi
  namespace: democratic-csi
spec:
  interval: 12h
  chart:
    spec:
      chart: democratic-csi
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: democratic-csi
        namespace: democratic-csi
  values:
    csiDriver:
      # should be globally unique for a given cluster
      name: "org.democratic-csi.iscsi"

    # add note here about volume expansion requirements
    storageClasses:
      - name: freenas-iscsi-csi
        defaultClass: false
        reclaimPolicy: Delete
        volumeBindingMode: Immediate
        allowVolumeExpansion: true
        parameters:
          # for block-based storage can be ext3, ext4, xfs
          # for nfs should be nfs
          fsType: ext4

          # if true, volumes created from other snapshots will be
          # zfs send/received instead of zfs cloned
          # detachedVolumesFromSnapshots: "false"

          # if true, volumes created from other volumes will be
          # zfs send/received instead of zfs cloned
          # detachedVolumesFromVolumes: "false"

        mountOptions: []
        secrets:
          provisioner-secret:
          controller-publish-secret:
          node-stage-secret:
          #      # any arbitrary iscsiadm entries can be add by creating keys starting with node-db.<entry.name>
          #      # if doing CHAP
          #      node-db.node.session.auth.authmethod: CHAP
          #      node-db.node.session.auth.username: foo
          #      node-db.node.session.auth.password: bar
          #
          #      # if doing mutual CHAP
          #      node-db.node.session.auth.username_in: baz
          #      node-db.node.session.auth.password_in: bar
          node-publish-secret:
          controller-expand-secret:

    # if your cluster supports snapshots you may enable below
    volumeSnapshotClasses: []
    #- name: freenas-iscsi-csi
    #  parameters:
    #  # if true, snapshots will be created with zfs send/receive
    #  # detachedSnapshots: "false"
    #  secrets:
    #    snapshotter-secret:

    driver:
      config:
        # please see the most up-to-date example of the corresponding config here:
        # https://github.com/democratic-csi/democratic-csi/tree/master/examples
        # YOU MUST COPY THE DATA HERE INLINE!
        driver: freenas-iscsi
        httpConnection:
            protocol: http
            host: truenas.local
            port: 80ßß¡
            apiKey: 1-znx8y4pqMFGZHGkikC9y7dsixIPwDx5UzWjG88DhELA8lDhJzb6ijxvuuOoa1Nj0
            allowInsecure: true
        zfs:
          datasetParentName: dpool/nomad/iscsi/v
          detachedSnapshotsDatasetParentName: dpool/nomad/iscsi/s
          zvolCompression:
          zvolDedup:
          zvolEnableReservation: false
          zvolBlocksize:
        iscsi:
          targetPortal: "truenas.local:3260"
          targetPortals: []
          interface:
          namePrefix: csi-
          nameSuffix: "-clustera"
          targetGroups:
            - targetGroupPortalGroup: 1
              targetGroupInitiatorGroup: 4
              targetGroupAuthType: None
              targetGroupAuthGroup:
          extentInsecureTpc: true
          extentXenCompat: false
          extentDisablePhysicalBlocksize: true
          extentBlocksize: 512
          extentRpm: "SSD"
          extentAvailThreshold: 0

        #...
